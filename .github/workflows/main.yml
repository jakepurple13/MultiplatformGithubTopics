name: Compose Desktop Build

env:
  GITHUB_DEPLOY: 'false'

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - LICENSE
      - README.md
      - 'docs/**'
      - '.github/config/labels.yml'

  pull_request:
    branches:
      - main

  workflow_dispatch:
  repository_dispatch:
    types: [ app-release ]

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Package
    timeout-minutes: 15
    continue-on-error: true
    # if: github.event_name  == 'pull_request'

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        jdk: [ 18 ]

    steps:
      - name: Check out the source code
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 18

      - name: Cache Gradle dependencies
        uses: actions/cache@v3.0.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build Release App
        run: |
          ./gradlew packageUberJarForCurrentOS
          ./gradlew package
      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: distributable-${{ matrix.os }}
          if-no-files-found: ignore
          path: |
            build/**/*.dmg
            build/**/*.deb
            build/**/*.msi
            build/**/*.exe
            build/compose/jars/*.jar

  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11

      - name: Get tag name
        id: get_tag_name
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Bump version
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}
          versionName: ${{ env.VERSION_TAG }}

      - name: Build Artifacts
        id: buildApks
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: app:bundleRelease

      - name: Clean up build artifacts
        run: |
          cp android/build/outputs/bundle/android-bundle.aab github-topics-release.aab
      - uses: actions/upload-artifact@v3
        with:
          name: Signed GitHub Topics App
          path: github-topics-release.aab

  release:
    name: Release new version.
    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Check out the source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download all the build artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-artifacts

      - name: Github Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          prerelease: ${{ contains(github.event.inputs.version, '-rc') || contains(github.event.inputs.version, '-b') || contains(github.event.inputs.version, '-a') }}
          files: |
            ${{ github.workspace }}/release-artifacts/**
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
